<launch>

  <param name="robot_description" command="$(find xacro)/xacro.py '$(find kurt_description)/robots/kurt360.urdf.xacro'" />

  <node pkg="robot_state_publisher" type="state_publisher" name="state_publisher" />

  <include file="$(find kurt_base)/launch/kurt_outdoor.launch" />
  <param name="kurt_base/use_rotunit" value="true" />

  <include file="$(find kurt_teleop)/launch/cyborgevo.launch" />

  <include file="$(find kurt_bringup)/launch/sick_lms200.launch" />

  <node pkg="laser_filters" type="scan_to_cloud_filter_chain" name="scan_to_cloud_filter_chain">
    <param name="target_frame" value="/odom"/>
    <param name="high_fidelity" value="true"/>
  </node>

  <node pkg="robot_self_filter" type="self_filter" name="self_filter">
    <remap from="cloud_in" to="/cloud_filtered" />

    <!-- The frame of the sensor used to obtain the data to be
       filtered; This parameter is optional. If it is not specified,
       shadow points will be considered outside -->
    <param name="sensor_frame" value="/laser" />

    <rosparam command="load" file="$(find kurt_bringup)/config/kurt360_self_filter.yaml" />
  </node>
  
  <node pkg="laser_assembler" type="point_cloud_assembler" name="point_cloud_assembler">
    <remap from="cloud" to="cloud_out"/>
    <param name="max_scans" value="1000" />
    <param name="fixed_frame" value="/odom" />
    <param name="ignore_laser_skew" value="false" />
  </node>

  <node pkg="rotunit_snapshotter" type="rotunit_snapshotter" name="rotunit_snapshotter" />

</launch>
