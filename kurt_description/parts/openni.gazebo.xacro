<?xml version="1.0"?>
<!--

  ROS Gazebo plugin for RGBD sensor (OpenNI/Kinect/ASUS)
   * Publishes MONO8 format "depth" image & PointCloud
   * Publishes RGB8 format color image & 2nd copy of PointCloud (for registered)

  Sensor parameters are from PR2 description.  
-->
<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
       xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="openni_ir_gazebo_v0" params="link_name frame_name camera_name">
    <gazebo reference="${link_name}">
      <sensor:camera name="${camera}_ir_sensor">
        <imageFormat>L8</imageFormat>
        <imageSize>640 480</imageSize>
        <hfov>57</hfov>
        <nearClip>0.01</nearClip>
        <farClip>5</farClip>
        <updateRate>1.0</updateRate>
        <baseline>0.2</baseline>
        <controller:gazebo_ros_openni_kinect name="${link_name}_controller" plugin="libgazebo_ros_openni_kinect.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>1.0</updateRate>
          <cameraName>${camera_name}_ir</cameraName>
          <imageTopicName>/${camera_name}/depth/image_raw</imageTopicName>
          <cameraInfoTopicName>/${camera_name}/depth/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/${camera_name}/depth/image_raw</depthImageTopicName>
          <depthImageInfoTopicName>/${camera_name}/depth/camera_info</depthImageInfoTopicName>
          <pointCloudTopicName>/${camera_name}/depth/points</pointCloudTopicName>
          <frameName>${frame_name}</frameName>
          <pointCloudCutoff>0.5</pointCloudCutoff>
          <distortionK1>0.00000001</distortionK1>
          <distortionK2>0.00000001</distortionK2>
          <distortionK3>0.00000001</distortionK3>
          <distortionT1>0.00000001</distortionT1>
          <distortionT2>0.00000001</distortionT2>
        </controller:gazebo_ros_openni_kinect>
      </sensor:camera>
      <material value="Gazebo/Red" />
    </gazebo>
  </xacro:macro>

  <xacro:macro name="openni_rgb_gazebo_v0" params="link_name frame_name camera_name">
    <gazebo reference="${link_name}">
      <sensor:camera name="${camera}_rgb_sensor">
        <imageFormat>R8G8B8</imageFormat>
        <imageSize>640 480</imageSize>
        <hfov>57</hfov>
        <nearClip>0.01</nearClip>
        <farClip>5</farClip>
        <updateRate>1.0</updateRate>
        <baseline>0.2</baseline>
        <controller:gazebo_ros_openni_kinect name="${link_name}_controller" plugin="libgazebo_ros_openni_kinect.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>1.0</updateRate>
          <cameraName>${camera_name}_rgb</cameraName>
          <imageTopicName>/${camera_name}/rgb/image_raw</imageTopicName>
          <cameraInfoTopicName>/${camera_name}/rgb/camera_info</cameraInfoTopicName>
          <pointCloudTopicName>/${camera_name}/depth_registered/points</pointCloudTopicName>
          <frameName>${frame_name}</frameName>
          <pointCloudCutoff>0.5</pointCloudCutoff>
          <distortionK1>0.00000001</distortionK1>
          <distortionK2>0.00000001</distortionK2>
          <distortionK3>0.00000001</distortionK3>
          <distortionT1>0.00000001</distortionT1>
          <distortionT2>0.00000001</distortionT2>
        </controller:gazebo_ros_openni_kinect>
      </sensor:camera>
      <material value="Gazebo/Red" />
    </gazebo>
  </xacro:macro>

</robot>
